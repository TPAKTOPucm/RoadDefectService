// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoadDefectService.Data;

#nullable disable

namespace RoadDefectService.Migrations
{
    [DbContext(typeof(RoadContext))]
    [Migration("20231017181618_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.23");

            modelBuilder.Entity("RoadDefectService.Models.Defects", b =>
                {
                    b.Property<int>("Y")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlligatorCracking")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EdgeCracking")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LongitudinalCracking")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Patching")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Pothole")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Rutting")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TransverseCracking")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.HasKey("Y");

                    b.ToTable("Defects");
                });

            modelBuilder.Entity("RoadDefectService.Models.Image", b =>
                {
                    b.Property<int>("DefectsX")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("DefectsY")
                        .HasColumnType("INTEGER");

                    b.HasKey("DefectsX");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("RoadDefectService.Models.Image", b =>
                {
                    b.HasOne("RoadDefectService.Models.Defects", "Defects")
                        .WithOne("Image")
                        .HasForeignKey("RoadDefectService.Models.Image", "DefectsX")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defects");
                });

            modelBuilder.Entity("RoadDefectService.Models.Defects", b =>
                {
                    b.Navigation("Image")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
